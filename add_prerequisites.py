import json
import sys


"""
This program adds the the prerequisite dependencies to each user
based on the courses that the user has taken, it requires the 
filtered users file created by user-cleaner.py, the extracted course concepts generated by
extract-course-concepts.py and the prerequisite-dependency.json file from the MOOC dataset


The code takes three inputs:

users_file: Contains user data including their course enrollment history.
course_concepts_file: Maps courses to concepts.
prerequisites_file: Maps concepts to their prerequisites.
"""


def load_data_from_file(filename):
    """Load data from a JSON file and return as a list."""
    with open(filename, 'r', encoding='utf-8') as f:
        return [json.loads(line) for line in f]


def main(users_file, course_concepts_file, prerequisites_file, output_file):
    # Read user data
    user_data = load_data_from_file(users_file)

    # Read course-concept mapping from the provided file and transform it into a dictionary
    course_concepts_data = load_data_from_file(course_concepts_file)
    course_concepts = {data['course']: data['concepts'] for data in course_concepts_data}

    # Read prerequisites. The data format is assumed to be two columns separated by a tab.
    prerequisites = {}
    with open(prerequisites_file, 'r', encoding='utf-8') as f:
        for line in f:
            concept, prereq = line.strip().split('\t')
            prerequisites[concept] = prereq

    # Process each user to extract relevant prerequisites based on courses they've taken
    for user in user_data:
        user_prerequisites = set()
        for course in user['course_order']:
            for concept in course_concepts.get(course, []):  # Fetch associated concepts for the course
                if concept in prerequisites:  # Check if the concept has an associated prerequisite
                    user_prerequisites.add(prerequisites[concept])
        user['prerequisites'] = list(user_prerequisites)

    # Write the updated user data to the output file
    with open(output_file, 'w', encoding='utf-8') as f:
        for user in user_data:
            f.write(json.dumps(user, ensure_ascii=False) + '\n')


if __name__ == "__main__":
    # Check that the script was provided with the right number of arguments
    if len(sys.argv) != 5:
        print("Usage: python script_name.py <users_file> <course_concepts_file> <prerequisites_file> <output_file>")
        sys.exit(1)

    # Execute the main function with the provided arguments
    main(sys.argv[1], sys.argv[2], sys.argv[3], sys.argv[4])


